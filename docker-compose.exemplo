version: '2'
services:

  webapp-service:
    image: node:8.11.4-slim
    container_name: app-webapp
    user: "node"
    working_dir: /home/node/app
    volumes:
      - ./webapp:/home/node/app
    command:
      sh -c 'npm run serve'
      #      sh -c 'npm run lint && npm run serve'
      # sh -c 'npm i && npm run serve'
    ports:
      - "8080:8080"
    environment:
      - NODE_CONFIG_ENV=development
      - NODE_ENV=development
      #- NODE_CONFIG_ENV=production
      #- NODE_ENV=production

  api-service:
    container_name: app-api
    # build: .
    image: culturagovbr/notification-php-fpm:1.0.1
    working_dir: /application
    volumes:
      - ./api:/application
      - ./docker/php-fpm/php-ini-overrides.ini:/etc/php/7.2/fpm/conf.d/99-overrides.ini
    environment:
      # - UPDATE_COMPOSER_DEPENDENCIES=true
      - USE_PHP_FPM=true
      - DB_CONNECTION=pgsql
      - DB_HOST=app-database
      - DB_PORT=5432
      - DB_DATABASE=unidesc_db
      - DB_USERNAME=unidesc_usr
      - DB_PASSWORD=123456
    depends_on:
      - database-service

  webserver-service:
    image: nginx:alpine
    container_name: app-webserver
    working_dir: /application
    volumes:
      - ./api:/application
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
      - "81:80"
    depends_on:
      - api-service

  database-service:
    image: postgres:10
    container_name: app-database
    environment:
      - POSTGRES_PASSWORD=123456
      - POSTGRES_USER=unidesc_usr
      - POSTGRES_DB=unidesc_db
      - POSTGRES_DB_TEST=unidesc_db_teste
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - ./database/docker-data/postgres:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/0.schema.sql
      #- ./database/initial-data.sql:/docker-entrypoint-initdb.d/1.data.sql
